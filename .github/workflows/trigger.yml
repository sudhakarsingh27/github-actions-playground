# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # multi line commands
      - name: Run `sbatch` command
        run: |
          pwd
          export JOBSCRIPTSDIR=${GITHUB_WORKSPACE}/.github/workflows/slurm_job_scripts
          sbatch -N 1 multinode.sub | tee output.log
          sleep 10s
          export SLURM_JOBID=$(grep 'Submitted batch job' "output.log" | awk '{ print $4 }')
          export SLURM_OUTPUT=$(scontrol show job "${SLURM_JOBID}" | grep 'StdOut' | awk -F '=' '{ print $2 }')
          $JOBSCRIPTSDIR/jobwait.sh "${SLURM_JOBID}" & PID=$!
          touch "${SLURM_OUTPUT}"
          echo -e " ---------------------------------------------------\n"
               "----------WAITING FOR SLURM JOB TO BEGIN-----------\n"
               "---------------------------------------------------\n"
               "$(scontrol show job=${SLURM_JOBID})\n"
               "---------------------------------------------------\n"
          tail --pid="${PID}" -f "${SLURM_OUTPUT}"
          export SLURM_NODELIST=$($JOBSCRIPTSDIR/jobnodes.sh "${SLURM_JOBID}"); echo "SLURM_NODELIST='${SLURM_NODELIST}'"
          export SLURM_STATE=$($JOBSCRIPTSDIR/jobstate.sh "${SLURM_JOBID}"); echo "SLURM_JOBID=${SLURM_JOBID} SLURM_STATE='${SLURM_STATE}'"
          export SLURM_WALLTIME=$($JOBSCRIPTSDIR/jobtime.sh "${SLURM_JOBID}"); echo "SLURM_WALLTIME=${SLURM_WALLTIME} secs"
          export SLURM_EXITCODE=$($JOBSCRIPTSDIR/jobexitcode.sh "${SLURM_JOBID}" || echo $?); echo "SLURM_EXITCODE='${SLURM_EXITCODE}'"
          if [ "${SLURM_EXITCODE}" != "0" ];      then exit ${SLURM_EXITCODE:-999}; fi
          if [ "${SLURM_STATE}" != "COMPLETED" ]; then exit 1; fi

